function [numExcitons,Tmax,deltaT,segLenMin,numRegions,xdim,minBin,rmax,numBins,lowAng,highAng,numAng,numTSteps] = importDetails(filename, startRow, endRow)
%IMPORTFILE Import numeric data from a text file as column vectors.
%   [NUMEXCITONS1,TMAX1,DELTAT1,SEGLENMIN1,NUMREGIONS1,XDIM1,MINBIN1,RMAX1,NUMBINS1,LOWANG1,HIGHANG1,NUMANG1,NUMTSTEPS]
%   = IMPORTFILE(FILENAME) Reads data from text file FILENAME for the
%   default selection.
%
%   [NUMEXCITONS1,TMAX1,DELTAT1,SEGLENMIN1,NUMREGIONS1,XDIM1,MINBIN1,RMAX1,NUMBINS1,LOWANG1,HIGHANG1,NUMANG1,NUMTSTEPS]
%   = IMPORTFILE(FILENAME, STARTROW, ENDROW) Reads data from rows STARTROW
%   through ENDROW of text file FILENAME.
%
% Example:
%   [numExcitons1,Tmax1,deltaT1,segLenMin1,numRegions1,xdim1,minBin1,rmax1,numBins1,lowAng1,highAng1,numAng1,numTSteps]
%   = importfile('details.csv',2, 2);
%
%    See also TEXTSCAN.

% Auto-generated by MATLAB on 2015/07/23 13:46:04

%% Initialize variables.
delimiter = ',';
if nargin<=2
    startRow = 2;
    endRow = inf;
end

%% Format string for each line of text:
%   column1: double (%f)
%	column2: double (%f)
%   column3: double (%f)
%	column4: double (%f)
%   column5: double (%f)
%	column6: double (%f)
%   column7: double (%f)
%	column8: double (%f)
%   column9: double (%f)
%	column10: double (%f)
%   column11: double (%f)
%	column12: double (%f)
%   column13: double (%f)
% For more information, see the TEXTSCAN documentation.
formatSpec = '%f%f%f%f%f%f%f%f%f%f%f%f%f%[^\n\r]';

%% Open the text file.
fileID = fopen(filename,'r');

%% Read columns of data according to format string.
% This call is based on the structure of the file used to generate this
% code. If an error occurs for a different file, try regenerating the code
% from the Import Tool.
dataArray = textscan(fileID, formatSpec, endRow(1)-startRow(1)+1, 'Delimiter', delimiter, 'HeaderLines', startRow(1)-1, 'ReturnOnError', false);
for block=2:length(startRow)
    frewind(fileID);
    dataArrayBlock = textscan(fileID, formatSpec, endRow(block)-startRow(block)+1, 'Delimiter', delimiter, 'HeaderLines', startRow(block)-1, 'ReturnOnError', false);
    for col=1:length(dataArray)
        dataArray{col} = [dataArray{col};dataArrayBlock{col}];
    end
end

%% Close the text file.
fclose(fileID);

%% Post processing for unimportable data.
% No unimportable data rules were applied during the import, so no post
% processing code is included. To generate code which works for
% unimportable data, select unimportable cells in a file and regenerate the
% script.

%% Allocate imported array to column variable names
numExcitons = dataArray{:, 1};
Tmax = dataArray{:, 2};
deltaT = dataArray{:, 3};
segLenMin = dataArray{:, 4};
numRegions = dataArray{:, 5};
xdim = dataArray{:, 6};
minBin = dataArray{:, 7};
rmax = dataArray{:, 8};
numBins = dataArray{:, 9};
lowAng = dataArray{:, 10};
highAng = dataArray{:, 11};
numAng = dataArray{:, 12};
numTSteps = dataArray{:, 13};

